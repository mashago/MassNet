#1.define target
#2.include and lib
#3.group source
#4.create lib
#5.link lib
#6.set output path

#1.define target
SET(TARGET_NAME MassNetClient)

#2.include and lib
INCLUDE_DIRECTORIES(
.
../core/common
../core/net
../core/world
../tinyxml
/usr/local/include
/usr/include
/usr/local/include/mysql
/usr/include/mysql
)

LINK_DIRECTORIES(
/usr/lib
/usr/local/lib
)

IF(CMAKE_SYSTEM_NAME MATCHES "Darwin")
	INCLUDE_DIRECTORIES(/usr/local/include/mysql)
	LINK_DIRECTORIES(/usr/local/mysql/lib)
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Linux")
	LINK_DIRECTORIES(/usr/lib64/mysql)
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "CYGWIN")
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Windows")
	INCLUDE_DIRECTORIES(${PROJECT_PATH}/include/windows/lua)
	INCLUDE_DIRECTORIES(${PROJECT_PATH}/include/windows/libevent)
	INCLUDE_DIRECTORIES(${PROJECT_PATH}/include/windows/mysql)
	LINK_DIRECTORIES(${PROJECT_PATH}/lib/windows)
ELSE()
ENDIF()

SET(LOCAL_LIBRARIES "core;tinyxml;lfs")

IF(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
	SET(LIBRARIES "lua;event;mysqlclient;dl")
ELSEIF(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
	IF(PROJECT_BUILD_TYPE MATCHES "Debug")
		# use mysql debug dll
		SET(LIBRARIES "ws2_32;liblua;libevent;libmysql")
		#SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} /NODEFAULTLIB:libcmtd.lib")
		SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} /NODEFAULTLIB:libcmtd.lib /NODEFAULTLIB:libcmt.lib /NODEFAULTLIB:msvcrt.lib")
	ELSEIF(PROJECT_BUILD_TYPE MATCHES "Release")
		# use mysql release lib
		SET(LIBRARIES "ws2_32;liblua;libevent;mysqlclient")
		SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /NODEFAULTLIB:libcmt.lib")
	ENDIF()
ENDIF()

#3.group source
FILE(GLOB FILES_HEAD *.h *.hpp)
AUX_SOURCE_DIRECTORY(. FILES_SOURCE)
SOURCE_GROUP("Include" FILES ${FILES_HEAD})
SOURCE_GROUP("Source" FILES ${FILES_SOURCE})

#4.create lib
ADD_EXECUTABLE(${TARGET_NAME} ${FILES_HEAD} ${FILES_SOURCE})

#5.link lib
TARGET_LINK_LIBRARIES(${TARGET_NAME} ${LOCAL_LIBRARIES} ${LIBRARIES})

#6.install to dir or build to dir
IF(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
	SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_PATH}/bin")
ELSEIF(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
	SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_PATH}/bin")
	SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_PATH}/bin")
ENDIF()
