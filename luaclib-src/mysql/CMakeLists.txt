
#1.define target
#2.include
#3.group source
#4.create lib

#1.define target
SET(TARGET_NAME cerberus_mysql)

#2.include
INCLUDE_DIRECTORIES(
./
/usr/local/include
/usr/local/include/mysql
/usr/include/mysql
/usr/local/mysql/include
)

IF(CMAKE_SYSTEM_NAME MATCHES "Darwin")
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Linux")
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "CYGWIN")
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Windows")
	INCLUDE_DIRECTORIES(${PROJECT_PATH}/include/windows/lua)
	INCLUDE_DIRECTORIES(${PROJECT_PATH}/include/windows/mysql)
	# for windows dll
	LINK_DIRECTORIES(${PROJECT_PATH}/lib/windows)
ELSE()
ENDIF()

#3.group source
FILE(GLOB FILES_SOURCE *.h *.hpp *.c *.cpp)
SOURCE_GROUP("source" FILES ${FILES_SOURCE})

#4.create lib
ADD_LIBRARY(${TARGET_NAME} SHARED ${FILES_SOURCE})
IF(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
	TARGET_LINK_LIBRARIES(${TARGET_NAME} "mysqlclient")
ELSEIF(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
	IF(PROJECT_BUILD_TYPE MATCHES "Debug")
		TARGET_LINK_LIBRARIES(${TARGET_NAME} "liblua;libmysql")
	ELSEIF(PROJECT_BUILD_TYPE MATCHES "Release")
		TARGET_LINK_LIBRARIES(${TARGET_NAME} "liblua;mysqlclient")
	ENDIF()
ENDIF()

IF(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
	SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${PROJECT_PATH}/luaclib")
ELSEIF(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
	SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_PATH}/luaclib")
	SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_PATH}/luaclib")
ENDIF()
