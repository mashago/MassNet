
#1.define target
#2.include
#3.group source
#4.create lib

#1.define target
SET(TARGET_NAME lfs)

#2.include
INCLUDE_DIRECTORIES(
./
/usr/local/include
)

IF(CMAKE_SYSTEM_NAME MATCHES "Darwin")
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Linux")
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "CYGWIN")
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Windows")
	INCLUDE_DIRECTORIES(${PROJECT_PATH}/include/windows/lua)
ELSE()
ENDIF()

# for executable
IF(CMAKE_SYSTEM_NAME MATCHES "Windows")
	LINK_DIRECTORIES(${PROJECT_PATH}/lib/windows)
ENDIF()

#3.group source
FILE(GLOB FILES_SOURCE *.h *.hpp *.c *.cpp)
SOURCE_GROUP("source" FILES ${FILES_SOURCE})

#4.create lib
ADD_LIBRARY(${TARGET_NAME} SHARED ${FILES_SOURCE})
IF(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
	TARGET_LINK_LIBRARIES(${TARGET_NAME} "liblua")
	IF(PROJECT_BUILD_TYPE MATCHES "Debug")
		SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} /NODEFAULTLIB:msvcrt.lib")
	ELSEIF(PROJECT_BUILD_TYPE MATCHES "Release")
		SET(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /NODEFAULTLIB:msvcrt.lib")
	ENDIF()
ENDIF()

IF(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
	# SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${PROJECT_PATH}/luaclib")
	SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${PROJECT_PATH}/luaclib")
ELSEIF(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
	SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_PATH}/luaclib")
	SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_PATH}/luaclib")
	# SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_DEBUG "${PROJECT_PATH}/luaclib")
	# SET_TARGET_PROPERTIES(${TARGET_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_RELEASE "${PROJECT_PATH}/luaclib")
ENDIF()
